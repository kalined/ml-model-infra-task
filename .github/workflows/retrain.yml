name: Retrain MNIST Model

on:
  pull_request:
    paths:
      - 'notebook-mnist.ipynb'
      - 'mnist_images/**'

jobs:
  retrain:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Determine latest week
        id: pick_week
        run: |
          latest=$(ls mnist_images/weeks \
                   | grep -E '^week [0-9]+' \
                   | sort -V \
                   | tail -n1)
          echo "WEEK=$latest" >> $GITHUB_ENV

      - name: Check contents of latest week
        run: |
          echo "Checking contents of ./mnist_images/weeks/${{ env.WEEK }}/"
          ls -la "./mnist_images/weeks/${{ env.WEEK }}/"

      - name: Unpack images into latest week
        run: |
          rm -f "./mnist_images/weeks/${{ env.WEEK }}/.gitkeep"

          tar --strip-components=1 -xf "./mnist_images/weeks/${{ env.WEEK }}/mnist-images.tar.gz" -C "./mnist_images/weeks/${{ env.WEEK }}/"

          echo "Contents of ./mnist_images/weeks/${{ env.WEEK }}/ after extraction:"
          ls -la "./mnist_images/weeks/${{ env.WEEK }}/"

      - name: Set up Python
        uses: actions/setup-python@v4
        with: 
            python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install notebook papermill

      - name: Execute notebook on ${{ env.WEEK }}
        run: |
          papermill notebook-mnist.ipynb \
                    retrained.ipynb \
                    -p WEEK "${{ env.WEEK }}" \
                    --log-output
        shell: bash

      - name: Upload retrained model
        uses: actions/upload-artifact@v4
        with:
          name: mnist_model_${{ env.WEEK }}
          path: supported_model/mnist_model.h5

      - name: Get list of artifacts
        id: get-artifacts
        run: |
          # Fetch the list of artifacts from the GitHub API
          curl -H "Authorization: Bearer ${{ secrets.GH_PAT }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/actions/artifacts > artifacts.json

          cat artifacts.json

          # production model artifact
          prod_artifact_id=$(
            jq -r '
              .artifacts
              | map(select(.name | test("_production")))
              | max_by(.created_at)
              | .id
            ' artifacts.json
          )

          # new model artifact (anything starting “mnist_model”)
          new_artifact_id=$(
            jq -r '
              .artifacts
              | map(select(.name | startswith("mnist_model")))
              | max_by(.created_at)
              | .id
            ' artifacts.json
          )

          if [ -z "$prod_artifact_id" ]; then
            echo "Error: No production artifact found."
            exit 1
          fi

          if [ -z "$new_artifact_id" ]; then
            echo "Error: No new model artifact found."
            exit 1
          fi

          echo "prod_artifact_id=$prod_artifact_id" >> $GITHUB_ENV
          echo "new_artifact_id=$new_artifact_id" >> $GITHUB_ENV

      - name: Download production model artifact
        uses: actions/download-artifact@v4
        with:
          artifact-id: ${{ env.prod_artifact_id }}
          path: ./prod_model

      - name: Download latest new model artifact
        uses: actions/download-artifact@v4
        with:
          artifact-id: ${{ env.new_artifact_id }}
          path: ./new_model

      - name: Evaluate new model
        id: evaluate-new-model
        uses: ./.github/actions/evaluate-models
        with:
          new_model_artifact_path: ./new_model/mnist_model.h5
          prod_model_artifact_path: ./prod_model/mnist_model.h5

      - name: Get the result of the evaluation
        run: |
          if [ "${{ steps.evaluate-new-model.outputs.result }}" = "old" ]; then
            echo "::error New model performs worse. Rolling back to the production model."
            exit 1
          else
            echo "New model performs better. You can proceed with the deployment."
          fi